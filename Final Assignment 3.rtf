{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww22000\viewh14180\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 //Programmer: Paulo Dacaya s3540986\
//Program:    Assignment Part 3 V5 final copy. \
\
#include <iostream>\
#include <fstream>\
#include <iomanip>\
#include <ctime>\
#include <cstring>\
\
using namespace std;\
\
//function prototypes\
void getNames (string last[], string first[], int& count);\
\
int main() \{\
	\
	//declare array variables. \
	string lastName[8] = \{""\}; \
	string firstName[8] = \{""\};\
	int marks[] = \{0\};\
	\
	//declare variables\
	int counter = 0; \
	int small = 101; //used to calculate smallest mark.\
	int high = 0; //used to calculate highest mark. \
	double average = 0; \
	int total = 0; //need total to calculate average. \
	\
	ofstream outFile;\
	\
	srand(time(0)); //set random function seed to time(0)\
	\
	getNames(lastName, firstName, counter); 	//get names from function.\
	\
	for(int i = 0; i < counter; i++) \{\
		marks[i] = rand()%71 + 30; //assign random number to marks array.\
		\
		//find lowest mark.\
		if(marks[i] < small)\
			small = marks[i];\
		\
		// find highest mark.\
		if(marks[i] > high) \
			high = marks[i];\
			\
		//add values to total. \
		total += marks[i];\
	\}\
	//calculate the average. used static cast to obtain a double data type.  \
	average = static_cast<double>(total)/static_cast<double>(counter);\
	\
	//open new file for output.\
	outFile.open("records.txt");\
	\
	//validation.\
	if(outFile.fail()) \{\
		cout << "error: records.txt file could not be opened." << endl;\
		cout << "This program will now terminate." << endl;\
		return 1;\
	\}\
	\
	//print data into new file. \
	outFile << setw(10) << "First name" << setw(12) << "Last name" << setw(14) << "Course mark" << endl;\
	outFile << "-------------------------------------\\n";\
	\
	for (int i = 0; i < counter; i ++) \
		outFile << setw(10) << firstName[i] << setw(12) << lastName[i] << setw(10) << marks[i] << endl;\
	\
	outFile << "\\n\\nHighest mark: " << high;\
	outFile << "\\nLowest mark: " << small;\
	outFile << "\\nAverage mark: " << fixed << setprecision(2) << average;\
	\
	outFile.close(); //close outFile.\
	\
	return 0;\
\}\
\
void getNames (string last[], string first[], int& i) \{\
	//int i is used as a counter, passed by reference for main function. \
	\
	//declare input sequential access file. \
	ifstream inFile;\
	//open input file. \
	inFile.open("names.txt");\
	\
	//Verifying if file opens. \
	if(inFile.fail()) \{\
		cout << "error: names.txt file could not be opened" << endl;\
	\}\
	else \{\
		while (!inFile.eof()) \{\
			getline(inFile, first[i], ','); //input line into first name array, consume comma. \
			inFile >> last[i]; //input rest of the line into last name array. \
			inFile.ignore(1000, '\\n'); // ignore rest of the line.\
			i++; // increment each counter.\
		\}//end while.	\
	\}//end if.\
	inFile.close(); // close the file.\
\}}