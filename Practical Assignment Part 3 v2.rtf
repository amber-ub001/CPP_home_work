{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww13900\viewh15280\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 //Programmer: Paulo Dacaya\
//Program:    Trucks\
\
#include <iostream>\
#include <fstream>\
#include <iomanip>\
#include <string>\
#include <ctime>\
\
using namespace std;\
\
//function prototypes.\
void getNamesResults (string name[], int score[], int& count);\
string getgrade(int mark);\
\
\
int main() \{\
	\
	string names[] = \{""\};\
	int results[] = \{0\};\
	int counter = 0;\
	int small = 101;\
	string smallName = "";\
	int high = 0;\
	string highName = "";\
	\
	ofstream outFile;\
	\
	//get names from file and results from inFile.\
	getNamesResults(names, results, counter);\
	\
	outFile.open("scores2.txt", ios::out);\
	if(outFile.fail()) \{\
		cout << "error: unable to open file name scores2.txt" << endl; \
	\}\
	\
	outFile << setw(8) << "Name" << setw(12) << "Result" << setw(9) << "Grade" << endl;\
	outFile << "-----------------------------\\n";\
	for (int i = 0; i < counter; i++) \{\
		outFile << setw(8) << names[i] << setw(10) << results[i] << setw(9) << getgrade(results[i]) << endl;\
		\
		if(results[i] < small) \{\
			small = results[i];\
			smallName = names[i];\
		\}\
		\
		if(results[i] > high) \{\
			high = results[i];\
			highName = names[i];\
		\}\
	\}\
	\
	outFile << "\\nLowest mark, " << smallName << " with " << small << endl;\
	outFile << "Highest mark, " << highName << " with " << high << endl;\
\
	\
	return 0; \
\}\
\
void getNamesResults (string name[], int score[], int& count) \{\
	ifstream inFile;\
	inFile.open("scores.txt", ios::in);\
	\
	if(inFile.fail()) \{\
		cout << "error: unable to open file name scores.txt";\
	\}\
	\
	while(!inFile.eof()) \{\
		inFile >> name[count];\
		inFile.ignore(); //ignore the space in between name and numbers;\
		inFile >> score[count]; getline(inFile, score[count])\
		inFile.ignore(100, '\\n'); //ignore rest of the line.\
		count++;\
	\}//end for loop\
	inFile.close(); //close inFile. \
\}\
\
string getgrade(int mark) \{\
  string letter = " "; \
  //grading\
    if(mark >= 80)\
      letter = "HD";\
    else if(mark >= 70)\
      letter = "D";\
      else if(mark >=60)\
        letter = "CR";\
        else if(mark >= 50)\
          letter = "PA";\
          else\
            letter = "NN";\
  return letter;\
\}}