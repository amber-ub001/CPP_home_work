{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green116\blue0;\red0\green0\blue0;\red100\green56\blue32;
\red196\green26\blue22;\red170\green13\blue145;\red92\green38\blue153;\red28\green0\blue207;\red46\green13\blue110;
}
{\*\expandedcolortbl;;\csgenericrgb\c0\c45600\c0;\csgenericrgb\c0\c0\c0;\csgenericrgb\c39100\c22000\c12500;
\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c66500\c5200\c56900;\csgenericrgb\c35900\c14900\c60100;\csgenericrgb\c11000\c0\c81000;\csgenericrgb\c18100\c5200\c43100;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww20820\viewh14940\viewkind0
\deftab543
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 //programmer: Paulo Dacaya\cf3 \
\cf2 //program:    Automatic Teller Machine\cf3 \
\cf2 //C++ program\cf3 \
\
\cf4 #include \cf5 <iostream>\cf4 \
#include \cf5 <iomanip>\cf4 \
#include \cf5 <cstdlib>\cf4 \
\cf3 \
\cf6 using\cf3  \cf6 namespace\cf3  \cf7 std\cf3 ;\
\
\cf6 int\cf3  main () \{\
    \
    \cf6 int\cf3  amount = \cf8 0\cf3 ;\
    \cf6 int\cf3  notes = \cf8 0\cf3 ;\
    \cf6 int\cf3  total = \cf8 0\cf3 ;\
    \
    \cf2 // start 'do-while'\cf3 \
    \cf6 do\cf3  \{\
        \cf2 //display table\cf3 \
        \cf7 cout\cf3  << \cf9 setw\cf3 (\cf8 18\cf3 ) << \cf5 "Welcome!"\cf3 ;\
        \cf7 cout\cf3  << \cf9 setw\cf3 (\cf8 15\cf3 ) << \cf5 "\\nThis ATM only withdraws $50\\n\\n"\cf3 ;\
        \cf7 cout\cf3  << \cf9 setw\cf3 (\cf8 15\cf3 ) << \cf5 "100"\cf3  << \cf9 endl\cf3 ;\
        \cf7 cout\cf3  << \cf9 setw\cf3 (\cf8 15\cf3 ) << \cf5 "200"\cf3  << \cf9 endl\cf3 ;\
        \cf7 cout\cf3  << \cf9 setw\cf3 (\cf8 15\cf3 ) << \cf5 "300"\cf3  << \cf9 endl\cf3 ;\
        \cf7 cout\cf3  << \cf9 setw\cf3 (\cf8 15\cf3 ) << \cf5 "400"\cf3  << \cf9 endl\cf3 ;\
        \cf7 cout\cf3  << \cf9 setw\cf3 (\cf8 23\cf3 ) << \cf5 "other amount (5)"\cf3  << \cf9 endl\cf3 ;\
        \cf7 cout\cf3  << \cf9 setw\cf3 (\cf8 18\cf3 ) << \cf5 "exit (0)"\cf3  << \cf9 endl\cf3  << \cf9 endl\cf3 ;\
    \
        \cf7 cout\cf3  << \cf5 ">"\cf3 ;\
        \cf7 cin\cf3  >> amount;\
    \
   \
        \cf2 /*If a menu item is entered incorrectly display an error message and ask a user to reenter the option;\
         use a while loop that will continually check the option is entered.\
         */\cf3 \
        \cf6 while\cf3 (!(amount == \cf8 100\cf3  || amount == \cf8 200\cf3  || amount == \cf8 300\cf3  || amount == \cf8 400\cf3  || amount == \cf8 5\cf3  || amount == \cf8 0\cf3 )) \{\
            \cf7 cout\cf3  << \cf5 "error: incorrect value input"\cf3  << \cf9 endl\cf3  << \cf9 endl\cf3 ;\
            \cf7 cout\cf3  << \cf5 ">"\cf3 ;\
            \cf7 cin\cf3  >> amount;\
        \}\
    \
        \cf2 //Switch program for atm\cf3 \
        \cf6 switch\cf3 (amount) \{\
            \
            \cf6 case\cf3  \cf8 100\cf3 :\
            \cf6 case\cf3  \cf8 200\cf3 :\
            \cf6 case\cf3  \cf8 300\cf3 :\
            \cf6 case\cf3  \cf8 400\cf3 :\
                notes = amount/\cf8 50\cf3 ;\
                \cf7 cout\cf3  << \cf9 endl\cf3  << \cf5 "Withdraw amount is $"\cf3  << amount << \cf5 "."\cf3  << \cf9 endl\cf3  << notes << \cf5 " $50 notes.\\n\\n"\cf3 ;\
                \cf6 break\cf3 ;\
            \cf6 case\cf3  \cf8 5\cf3 :\
                \cf7 cout\cf3  << \cf5 "\\nEnter other amount."\cf3  << \cf9 endl\cf3  << \cf5 ">"\cf3 ;\
                \cf7 cin\cf3  >> amount;\
                \cf6 if\cf3 (amount % \cf8 50\cf3  == \cf8 0\cf3 ) \{\
                    notes = amount/\cf8 50\cf3 ;\
                    \cf7 cout\cf3  << \cf9 endl\cf3  << \cf5 "Withdraw amount is $"\cf3  << amount << \cf5 "."\cf3  << \cf9 endl\cf3  << notes << \cf5 " $50 notes.\\n\\n"\cf3 ;\
                \} \cf6 else\cf3  \{\
                    \cf2 // while loop will only end if correct amount to be entered that is divisible by 50.\cf3 \
                    \cf6 while\cf3 (!(amount % \cf8 50\cf3  == \cf8 0\cf3 )) \{\
                        \cf7 cout\cf3  << \cf5 "error: can only withdraw $50 notes."\cf3  << \cf9 endl\cf3 ;\
                        \cf7 cout\cf3  << \cf5 "\\nEnter other amount."\cf3  << \cf9 endl\cf3  << \cf5 ">"\cf3 ;\
                        \cf7 cin\cf3  >> amount;\
                    \}\
                    notes = amount/\cf8 50\cf3 ;\
                    \cf7 cout\cf3  << \cf9 endl\cf3  << \cf5 "Withdraw amount is $"\cf3  << amount << \cf5 "."\cf3  << \cf9 endl\cf3  << notes << \cf5 " $50 notes.\\n\\n"\cf3 ;\
                \}\
                \cf6 break\cf3 ;\
            \cf6 case\cf3  \cf8 0\cf3 :\
                \cf7 cout\cf3  << \cf5 "\\nThis will now terminate.\\nThank you for using this service.\\n\\n"\cf3 ;\
                \cf6 break\cf3 ;\
            \
        \} \cf2 //end switch\cf3 \
    \
        \cf2 //total withdraw ammount for each and display.\cf3 \
        total += amount;\
        \cf7 cout\cf3  << \cf5 "Total withdrawn: $"\cf3  << total << \cf5 "\\n\\n"\cf3 ;\
        \
        \cf6 if\cf3 (total > \cf8 2000\cf3 ) \{\
            \cf7 cout\cf3  << \cf5 "\\nYou have exceeded maximum withdrawal limit. ($2000)"\cf3  << \cf9 endl\cf3 ;\
            \cf7 cout\cf3  << \cf5 "This will now terminate. Thank you for using this service.\\n"\cf3  << \cf9 endl\cf3 ;\
            amount = \cf8 0\cf3 ; \cf2 // amount <= 0, to exit 'do-while' loop.\cf3 \
        \}\
        \
    \} \cf6 while\cf3 (amount != \cf8 0\cf3 );\
\
\
\
    \cf6 return\cf3  \cf8 0\cf3 ;\
\}\
\
}