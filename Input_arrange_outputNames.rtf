{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28300\viewh15280\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 //Programmer: Paulo Dacaya\
//Program:    openSpace\
\
#include <iostream>\
#include <fstream>\
#include <string>\
#include <iomanip>\
\
using namespace std;\
\
//function prototypes. \
string rearrange(string fullName);\
void saveInfo();\
void arrangeFile();\
void display();\
\
int main() \{\
	\
	saveInfo();\
	arrangeFile();\
	display();\
	\
	cin.get();\
	return 0; \
\}\
\
string rearrange(string fullName) \{\
	\
	string first = "";\
	string middle = ""; \
	string last = ""; \
	string arrangedName = "";\
	\
	int space1 = 0; \
	int space2 = 0; \
	\
	space1 = fullName.find(" ", 0);\
	first = fullName.substr(0, space1);\
	\
	space2 = fullName.find(" ", space1 + 1);\
	\
	if(space2 != -1) \{\
		middle = fullName.substr(space1 + 1, (space2 - (space1 + 1)));\
		last = fullName.substr(space2 + 1);\
		arrangedName = last + ", " + first + " " + middle;\
	\}\
	else \{\
		last = fullName.substr(space1 + 1);\
		arrangedName = last + ", " + first;\
	\}\
	//end if\
	return arrangedName;\
\}\
\
void saveInfo() \{\
	\
	string name = "";\
	ofstream outName;\
	outName.open("names.txt", ios::out);\
	\
	//validation and name entry.\
	if(outName.is_open()) \{\
		cout << "\\nEnter student's names:" << endl;\
		cout << endl << setw(30) << "Students names" << endl;\
		cout << setw(30) << "--------------" << endl;\
		cout << "(-1 to exit) >";\
		getline(cin, name);\
		\
		//repeat until finised name inputs.\
		while(name != "-1") \{\
			outName << name << endl;\
			\
			//register a name again. \
			cout << "(-1 to exit) >";\
			getline(cin, name);\
		\}//end while\
		outName.close(); //close the file. \
	\}\
	else \{\
		cout << "error: could create the file names.txt" << endl;\
		cout << "This will now terminate." << endl;\
	\}//end if\
\}//end functon\
\
void arrangeFile() \{\
	\
	string name = ""; \
	string arrangedName = "";\
	ifstream inFile; \
	ofstream outFile;\
	int counter = 0;\
	\
	inFile.open("names.txt", ios::in);\
	outFile.open("arrangedname.txt", ios::out);\
	\
	//verify and excecute arranged name file. \
	if(inFile.fail() || outFile.fail()) \{\
		cout << "error: unable to open file.\\n";\
	\}\
	else \{\
		while(!inFile.eof()) \{\
			getline(inFile, name, '\\n');\
			arrangedName = rearrange(name);\
			outFile << arrangedName << endl; //input arranged name into file. \
			counter ++; //counter for how many names.\
		\}//end while\
		inFile.close();\
		outFile.close();\
	\}// end if \
	\
	cout << "\\nThere is a total of " << counter << " names.\\n";\
\}// end function. \
\
void display() \{\
	\
	string name = 0;\
	ifstream inFile; \
	inFile.open("arrangedname.txt", ios::in); \
	\
	cout << "\\nThe following as arranged names:" << endl;\
	if(inFile.is_open()) \{\
		cout << endl << setw(30) << "Arranged names" << endl;\
		cout << setw(30) << "--------------" << endl;\
		while(!inFile.eof()) \{\
			getline(inFile, name, '\\n');\
			cout << name << endl; //display name.\
		\}//end while\
		inFile.close(); //close the file. \
	\}\
	else \{\
		cout << "error: unable to find the file arrangedname.txt" << endl;\
	\}//end if\
\}//end function.}